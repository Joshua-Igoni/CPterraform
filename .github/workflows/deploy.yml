name: Terraform Deploy

# ────────────────────────────────────────────────────────────────
# Triggers
# ────────────────────────────────────────────────────────────────
on:
  # Called from the _app_ repo via `gh workflow run …`
  workflow_dispatch:
    inputs:
      image_uri:
        description: "ECR image URI to deploy"
        required: true
  # Optional: open a PR in infra repo to see the plan before merge
  pull_request:
    paths: ["**.tf", "**/*.tfvars"]

# ────────────────────────────────────────────────────────────────
# Global defaults
# ────────────────────────────────────────────────────────────────
env:
  TF_IN_AUTOMATION: "true"
  AWS_REGION: ${{ vars.AWS_REGION }} 

permissions:
  id-token: write   # OIDC auth
  contents: read

jobs:
  terraform:
    name: "Terraform Apply"
    # only run the apply step on workflow_dispatch from default branch
    if: |
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.5        
        terraform_wrapper: false          

    - name: Export TF_VAR envs
      env:
          TF_VAR_container_image: ${{ github.event.inputs.image_uri }}
          TF_VAR_db_password:     ${{ secrets.DB_PASSWORD }}
      run: echo "Variables exported"

    - name: Terraform Init
      run: terraform init -upgrade

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -no-color -out=tfplan

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan